# Parameters
#-
# SLURM_N : number of nodes 
# SLURM_C : computing cluster name
# SLURM_p : the name of the queue to submit job
# SLURM_n : number of tasks
# SLURM_J : job name
# SLURM_t : job time limit
# SLURM_ADDITIONAL: (optional) hook to add additional SLURM job options (ex email)
# HYPERTHREAD: switch to use hyperthreading (option T/F)
# COLLECTION: swtich to distinguish individual taks from collections of tasks (option T/F)
# TASKS     : collection must be a list of tasks to run (ex RUN_ALL runs DATA_PREP, SIM_PREP etc)
# COMMANDS : indiviual python commands [must be one python command per line]


[DEFAULT_SLURM]
SLURM_N: 1
SLURM_C: haswell
SLURM_p: regular
SLURM_L: SCRATCH
SLURM_n: 1
SLURM_ADDITIONAL: 
HYPERTHREAD: T
SERIAL : T

# Individual task is defined here

# Runtime Measured
[MCM_PREP]
COLLECTION: False
SLURM_J: prepare_mcm
SLURM_t: 0:20:00
SLURM_p: regular
SLURM_N: 1
SLURM_n: 1
COMMANDS: python get_win_and_mcm.py  ../paramfiles/global_CAR_spin0.dict
    python get_win_and_mcm.py  ../paramfiles/global_CAR_spin02.dict
    python get_win_and_mcm.py  ../paramfiles/global_HEALPIX_spin0.dict
    python get_win_and_mcm.py  ../paramfiles/global_HEALPIX_spin02.dict

[COMP_COV]
COLLECTION: False
SLURM_N: 8   
SLURM_J: covariance_calc
SLURM_t: 8:00:00
SLURM_p: regular
SLURM_n: 128   
COMMANDS: python get_mc_spectra.py  ../paramfiles/global_CAR_spin0.dict
    python get_mc_spectra.py  ../paramfiles/global_CAR_spin02.dict
    python get_mc_spectra.py  ../paramfiles/global_HEALPIX_spin0.dict
    python get_mc_spectra.py  ../paramfiles/global_HEALPIX_spin02.dict

# Define collections here
[RUN_ALL]
COLLECTION: True 
TASKS: MCM_PREP;COMP_COV



